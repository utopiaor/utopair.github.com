<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[基于Iotgo的物联网云端环境搭建]]></title>
      <url>/2017/10/16/2017-10-16-22-40%E5%9F%BA%E4%BA%8EIotgo%E7%9A%84%E7%89%A9%E8%81%94%E7%BD%91%E4%BA%91%E7%AB%AF%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h1 id="Iotgo平台简介"><a href="#Iotgo平台简介" class="headerlink" title="Iotgo平台简介"></a>Iotgo平台简介</h1><p>IoTgo项目的初衷是想让用户可以像部署zencart搭建博客，安装 phpbb创建论坛一样，通过部署IoTgo建立自己的云端服务器,服务器不仅仅是接口开放，而是全部代码开源</p>
<hr>
<p><strong>github链接</strong><br>物联网平台及webUI<br><a href="https://github.com/itead/IoTgo" target="_blank" rel="external">https://github.com/itead/IoTgo</a><br>手机端app demo<br><a href="https://github.com/itead/IoTgo_Android_App" target="_blank" rel="external">https://github.com/itead/IoTgo_Android_App</a><br>Arduino库<br><a href="https://github.com/itead/ITEADLIB_Arduino_IoTgo" target="_blank" rel="external">https://github.com/itead/ITEADLIB_Arduino_IoTgo</a><br>树莓派，CB等卡片式电脑SDK<br><a href="https://github.com/itead/Segnix/tree/master/libraries/itead_IoTgo" target="_blank" rel="external">https://github.com/itead/Segnix/tree/master/libraries/itead_IoTgo</a>  </p>
<p>通信协议层仅支持HTTP Websocket，MQTT， CoAP  </p>
<p>其基本架构如下图所示<br><img src="https://i.imgur.com/Ef0oKXC.png" alt=""></p>
<hr>
<h1 id="服务器搭建"><a href="#服务器搭建" class="headerlink" title="服务器搭建"></a>服务器搭建</h1><h2 id="服务器环境"><a href="#服务器环境" class="headerlink" title="服务器环境"></a>服务器环境</h2><pre><code>主机：x86_64
操作系统: Ubuntu 16.04.3 LTS xenial
开发语言：html  javascript  python  go 
Web engine：nodejs
关系型数据库：mariaDB
NoSQL: mongoDB
开发依赖工具: git npm bower forever
</code></pre><h2 id="平台依赖环境安装"><a href="#平台依赖环境安装" class="headerlink" title="平台依赖环境安装"></a>平台依赖环境安装</h2><h3 id="NoSQL数据库mongoDB安装与配置"><a href="#NoSQL数据库mongoDB安装与配置" class="headerlink" title="NoSQL数据库mongoDB安装与配置"></a>NoSQL数据库mongoDB安装与配置</h3><ul>
<li>从官网下载最新版本mongodb-linux-ubuntu 16.04 -x64.tar包，解压<br><a href="http://www.mongodb.org/downloads" target="_blank" rel="external">http://www.mongodb.org/downloads</a>  </li>
</ul>
<ul>
<li>将解压后的文件复制到/usr/local/mongodb  </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">     tar xvf ubuntu 16.04 Linux 64-bit.tar`  </div><div class="line">     sudo mkdir /usr/local/mongodb  `</div><div class="line">     cp ./ mongodb-linux-ubuntu 16.04 -x64/* /usr/local/mongodb -rf  </div><div class="line">```  </div><div class="line">- 将mongodb的bin目录添加到PATH  </div><div class="line"></div><div class="line">``` </div><div class="line"># /etc/profile: system-wide .profile file for the Bourne shell (sh(1))</div><div class="line"># and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).</div><div class="line"></div><div class="line">if [ &quot;$PS1&quot; ]; then</div><div class="line">  if [ &quot;$BASH&quot; ] &amp;&amp; [ &quot;$BASH&quot; != &quot;/bin/sh&quot; ]; then</div><div class="line">    # The file bash.bashrc already sets the default PS1.</div><div class="line">    # PS1=&apos;\h:\w\$ &apos;</div><div class="line">    if [ -f /etc/bash.bashrc ]; then</div><div class="line">      . /etc/bash.bashrc</div><div class="line">    fi</div><div class="line">  else</div><div class="line">    if [ &quot;`id -u`&quot; -eq 0 ]; then</div><div class="line">      PS1=&apos;# &apos;</div><div class="line">    else</div><div class="line">      PS1=&apos;$ &apos;</div><div class="line">    fi</div><div class="line">  fi</div><div class="line">fi</div><div class="line"></div><div class="line">if [ -d /etc/profile.d ]; then</div><div class="line">  for i in /etc/profile.d/*.sh; do</div><div class="line">    if [ -r $i ]; then</div><div class="line">      . $i</div><div class="line">    fi</div><div class="line">  done</div><div class="line">  unset i</div><div class="line">fi</div><div class="line">export PATH=$PATH:/usr/local/mongodb/bin</div></pre></td></tr></table></figure>
<p>source /etc/profile 配置立即生效  </p>
<ul>
<li>编辑mongod.conf<br>创建/etc/mongod.conf  </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">vim /etc/mongod.conf   </div><div class="line">  </div><div class="line">#详细记录输出</div><div class="line">verbose = true</div><div class="line"># 指定服务端口号，默认端口27017</div><div class="line">port = 27017</div><div class="line"># 指定MongoDB日志文件，注意是指定文件不是目录</div><div class="line">logpath = /var/log/mongodb/logs/mongodb.log</div><div class="line"># 使用追加的方式写日志</div><div class="line">logappend = true</div><div class="line"># 指定数据库路径</div><div class="line">dbpath = /data/db/</div><div class="line">#设置每个数据库将被保存在一个单独的目录</div><div class="line">directoryperdb = true</div><div class="line"># 启用验证</div><div class="line">auth = false</div><div class="line">#以守护进程的方式运行MongoDB，创建服务器进程</div><div class="line">fork = true</div><div class="line">#安静输出</div><div class="line">quiet = true</div></pre></td></tr></table></figure>
<ul>
<li>创建配置文件中提到的用来保存文件的数据库目录，日志目录,日志文件  </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo mkdir -p /data/db/  </div><div class="line">sudo mkdir -p /var/log/mongodb/logs/  </div><div class="line">sudo touch /var/log/mongodb/logs/mongodb.log</div></pre></td></tr></table></figure>
<ul>
<li>编写脚本，注册开机启动  </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">vim /etc/init.d/mongodb  </div><div class="line"></div><div class="line">#!/bin/sh</div><div class="line">#BEGIN INIT INFO</div><div class="line"># Provides:     mongodb</div><div class="line"># Required-Start:</div><div class="line"># Required-Stop:</div><div class="line"># Default-Start:        2 3 4 5</div><div class="line"># Default-Stop:         0 1 6</div><div class="line"># Short-Description: mongodb</div><div class="line"># Description: mongo db server</div><div class="line">### END INIT INFO</div><div class="line"></div><div class="line">. /lib/lsb/init-functions</div><div class="line"></div><div class="line">PROGRAM=/usr/local/mongodb/bin/mongod</div><div class="line">MONGOPID=`ps -ef | grep &apos;mongod&apos; | grep -v grep | awk &apos;&#123;print $2&#125;&apos;`</div><div class="line"></div><div class="line">test -x $PROGRAM || exit 0</div><div class="line">case &quot;$1&quot; in</div><div class="line">  start)</div><div class="line">     ulimit -n 3000</div><div class="line">     log_begin_msg &quot;Starting MongoDB server&quot;</div><div class="line">     $PROGRAM -f /etc/mongod.conf</div><div class="line">     log_end_msg 0</div><div class="line">     ;;</div><div class="line">  stop)</div><div class="line">     log_begin_msg &quot;Stopping MongoDB server&quot;</div><div class="line">     if [ ! -z &quot;$MONGOPID&quot; ]; then</div><div class="line">        kill -15 $MONGOPID</div><div class="line">     fi</div><div class="line">     log_end_msg 0</div><div class="line">     ;;</div><div class="line">  status)</div><div class="line">     ;;</div><div class="line">  *)</div><div class="line">     log_success_msg &quot;Usage: /etc/init.d/mongodb &#123;start|stop|status&#125;&quot;</div><div class="line">     exit 1</div><div class="line">esac</div><div class="line">exit 0</div></pre></td></tr></table></figure>
<ul>
<li>添加可执行权限  </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo chmod +x /etc/init.d/mongodb</div></pre></td></tr></table></figure>
<ul>
<li>注册开机脚本  </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo update-rc.d mongodb defaults（移除用update-rc.d -f mongodb remove）</div></pre></td></tr></table></figure>
<ul>
<li>开启服务并测试连接  </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo service mongodb start（停止服务用sudo service mongodb stop）  </div><div class="line">sudo mongo</div></pre></td></tr></table></figure>
<hr>
<h3 id="Node-js安装与配置"><a href="#Node-js安装与配置" class="headerlink" title="Node.js安装与配置"></a>Node.js安装与配置</h3><p>执行以下命令安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update  </div><div class="line">sudo apt-get install -y python-software-properties software-properties-common</div><div class="line">sudo add-apt-repository ppa:chris-lea/node.js </div><div class="line">sudo apt-get update  </div><div class="line">sudo apt-get install nodejs</div></pre></td></tr></table></figure>
<p>node版本管理，升级到最新版本，否则后面编译会报错  </p>
<blockquote>
<p>npm ERR! Make sure you have the latest version of node.js and npm installed.<br>Npm更新到最新版本</p>
</blockquote>
<p>node的模块n是专门用来管理node.js的版本的<br>首先安装n模块  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g n</div></pre></td></tr></table></figure>
<p>升级node.js到最新稳定版  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">n stable</div></pre></td></tr></table></figure>
<p>测试  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nodejs -v</div></pre></td></tr></table></figure>
<blockquote>
<p>v4.2.6  </p>
</blockquote>
<p>表明已成功安装nodejs最新版本 </p>
<hr>
<h3 id="安装nodejs包管理工具"><a href="#安装nodejs包管理工具" class="headerlink" title="安装nodejs包管理工具"></a>安装nodejs包管理工具</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install npm</div></pre></td></tr></table></figure>
<hr>
<h3 id="安装forever-让node应用作为系统服务使用"><a href="#安装forever-让node应用作为系统服务使用" class="headerlink" title="安装forever,让node应用作为系统服务使用"></a>安装forever,让node应用作为系统服务使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install forever -g</div></pre></td></tr></table></figure>
<hr>
<h3 id="安装bower，front-end包管理工具"><a href="#安装bower，front-end包管理工具" class="headerlink" title="安装bower，front-end包管理工具"></a>安装bower，front-end包管理工具</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g bower</div></pre></td></tr></table></figure>
<hr>
<h2 id="iotgo环境构建"><a href="#iotgo环境构建" class="headerlink" title="iotgo环境构建"></a>iotgo环境构建</h2><ul>
<li>从github导入代码  </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/itead/IoTgo.git</div></pre></td></tr></table></figure>
<ul>
<li>安装python依赖   </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd IoTgo &amp;&amp; npm install</div></pre></td></tr></table></figure>
<ul>
<li>进入web app frontend 安装依赖 </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd public/frontend &amp;&amp; sudo bower install –allow-root</div></pre></td></tr></table></figure>
<ul>
<li>进入web app backend 安装依赖  </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd ../backend &amp;&amp; sudo bower install –allow-root</div></pre></td></tr></table></figure>
<ul>
<li>配置iot, config.js为iotgo启动配置文件  </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ../..</div><div class="line">cp config.js.sample config.js</div></pre></td></tr></table></figure>
<ul>
<li>更改config.js  </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">module.exports = &#123;</div><div class="line">  host: &apos;localhost&apos;,        // Hostname of IoTgo platform</div><div class="line">  db: &#123;                             </div><div class="line">    uri: &apos;mongodb://localhost/iotgo&apos;,   // MongoDB database address</div><div class="line">    options: &#123;</div><div class="line">      user: &apos;iotgo&apos;,                    // MongoDB database username</div><div class="line">      pass: &apos;iotgo&apos;                     // MongoDB database password</div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line">  jwt: &#123;</div><div class="line">    secret: &apos;jwt_secret&apos;                // Shared secret to encrypt JSON Web Token</div><div class="line">  &#125;,</div><div class="line">  admin:&#123;</div><div class="line">    &apos;iotgo&apos;: &apos;iotgo&apos; // Administrator account of IoTgo platform</div><div class="line">  &#125;,</div><div class="line">  page: &#123;</div><div class="line">    limit: 50,                          // Default query page limit</div><div class="line">    sort: -1                            // Default query sort order</div><div class="line">  &#125;,</div><div class="line">  recaptcha: &#123;</div><div class="line">      secret: &apos;&apos;,                       // Google reCAPTCHA serect</div><div class="line">      url: &apos;https://www.google.com/recaptcha/api/siteverify&apos;</div><div class="line">    &#125;,</div><div class="line">  pendingRequestTimeout: 3000,</div><div class="line">  mailgun: &#123;</div><div class="line">          api_key:&apos;&apos;,                   //Mailgun API Key</div><div class="line">          domain:&apos;&apos;,                    //Mailgun Domain Name</div><div class="line">          from:&apos;&apos;                       //Mailgun Default SMTP Login Email</div><div class="line">  &#125;,</div><div class="line">  upgradeUrl:&quot;http://v.itead.cc/api/upgrade&quot;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<ul>
<li>让Iotgo作为系统服务使用  </li>
</ul>
<p>创建开机启动项,编辑脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/init.d/iotgo</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">#</div><div class="line"># An init.d script for running a Node.js process as a service using Forever as</div><div class="line"># the process monitor. For more configuration options associated with Forever,</div><div class="line"># see: https://github.com/nodejitsu/forever</div><div class="line">#</div><div class="line"># This was written for Debian distributions such as Ubuntu, but should still</div><div class="line"># work on RedHat, Fedora, or other RPM-based distributions, since none of the</div><div class="line"># built-in service functions are used. So information is provided for both.</div><div class="line">#</div><div class="line"></div><div class="line">NAME=&quot;ITEAD IoTgo&quot;</div><div class="line">NODE_BIN_DIR=&quot;/usr/bin:/usr/local/bin&quot;</div><div class="line">NODE_PATH=&quot;/home/utopiaor/develop/IotGo/IoTgo/node_modules&quot;</div><div class="line">APPLICATION_PATH=&quot;/home/utopiaor/develop/IotGo/IoTgo/bin/www&quot;</div><div class="line">PIDFILE=&quot;/var/run/iotgo.pid&quot;</div><div class="line">LOGFILE=&quot;/var/log/iotgo.log&quot;</div><div class="line">MIN_UPTIME=&quot;5000&quot;</div><div class="line">SPIN_SLEEP_TIME=&quot;2000&quot;</div><div class="line"> </div><div class="line">PATH=$NODE_BIN_DIR:$PATH</div><div class="line">export NODE_PATH=$NODE_PATH</div><div class="line"> </div><div class="line">start() &#123;</div><div class="line">    echo &quot;Starting $NAME&quot;</div><div class="line">    forever \</div><div class="line">      --pidFile $PIDFILE \</div><div class="line">      -a \</div><div class="line">      -l $LOGFILE \</div><div class="line">      --minUptime $MIN_UPTIME \</div><div class="line">      --spinSleepTime $SPIN_SLEEP_TIME \</div><div class="line">      start $APPLICATION_PATH 2&gt;&amp;1 &gt; /dev/null &amp;</div><div class="line">    RETVAL=$?</div><div class="line">&#125;</div><div class="line"> </div><div class="line">stop() &#123;</div><div class="line">    if [ -f $PIDFILE ]; then</div><div class="line">        echo &quot;Shutting down $NAME&quot;</div><div class="line">        forever stop $APPLICATION_PATH 2&gt;&amp;1 &gt; /dev/null</div><div class="line">        rm -f $PIDFILE</div><div class="line">        RETVAL=$?</div><div class="line">    else</div><div class="line">        echo &quot;$NAME is not running.&quot;</div><div class="line">        RETVAL=0</div><div class="line">    fi</div><div class="line">&#125;</div><div class="line"> </div><div class="line">restart() &#123;</div><div class="line">    stop</div><div class="line">    start</div><div class="line">&#125;</div><div class="line"> </div><div class="line">status() &#123;</div><div class="line">    echo `forever list` | grep -q &quot;$APPLICATION_PATH&quot;</div><div class="line">    if [ &quot;$?&quot; -eq &quot;0&quot; ]; then</div><div class="line">        echo &quot;$NAME is running.&quot;</div><div class="line">        RETVAL=0</div><div class="line">    else</div><div class="line">        echo &quot;$NAME is not running.&quot;</div><div class="line">        RETVAL=3</div><div class="line">    fi</div><div class="line">&#125;</div><div class="line"> </div><div class="line">case &quot;$1&quot; in</div><div class="line">    start)</div><div class="line">        start</div><div class="line">        ;;</div><div class="line">    stop)</div><div class="line">        stop</div><div class="line">        ;;</div><div class="line">    status)</div><div class="line">        status</div><div class="line">        ;;</div><div class="line">    restart)</div><div class="line">        restart</div><div class="line">        ;;</div><div class="line">    *)</div><div class="line">        echo &quot;Usage: &#123;start|stop|status|restart&#125;&quot;</div><div class="line">        exit 1</div><div class="line">        ;;</div><div class="line">esac</div><div class="line">exit $RETVAL</div></pre></td></tr></table></figure>
<ul>
<li>添加可执行权限  </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo chmod 755 /etc/init.d/iotgo</div></pre></td></tr></table></figure>
<ul>
<li>注册启动脚本  </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo update-rc.d iotgo defaults</div></pre></td></tr></table></figure>
<ul>
<li>测试   </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo systemctl daemon-reload</div><div class="line">sudo service iotgo start</div></pre></td></tr></table></figure>
<h3 id="测试iotgo"><a href="#测试iotgo" class="headerlink" title="测试iotgo"></a>测试iotgo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DEBUG=&quot;iotgo&quot; ./bin/www</div></pre></td></tr></table></figure>
<ul>
<li>报错</li>
</ul>
<blockquote>
<p>1 Error: Cannot find module ‘../build/Release/bson’<br>2  Error: listen EACCES 0.0.0.0:80  </p>
</blockquote>
<p>对于1，没有安装bson，执行 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install bson</div></pre></td></tr></table></figure>
<p>，并修改</p>
<blockquote>
<p> (/home/utopiaor/develop/iot/IoTgo/node_modules/bson/ext/index.js:15:10)<br>bson = require(‘../build/Release/bson’); 为<br>bson = require(‘bson’);</p>
</blockquote>
<p>对于2,80端口被其他应用占用，kill 掉其应用  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo lsof -n -P | grep 80</div></pre></td></tr></table></figure>
<p>然后kill掉相关进程<br>或者更改端口号为8080</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo PORT=&quot;8080&quot; DEBUG=&quot;iotgo&quot; ./bin/www</div></pre></td></tr></table></figure>
<p>出现打印</p>
<blockquote>
<p>iotgo Express server listening on port 80 +0ms</p>
</blockquote>
<p>证明iotgo环境已搭建成功</p>
<p>本机浏览器访问：localhost，局域网内访问192.168.0.10,发现进入的是nodejs的欢迎界面<br>更换端口号为8080，node默认占用80端口，或者kill掉node服务<br>关闭nodejs 服务 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl stop nodejs.service</div></pre></td></tr></table></figure>
<p>重新启动iotgo  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo PORT=&quot;8080&quot; DEBUG=&quot;iotgo&quot; ./bin/www</div></pre></td></tr></table></figure>
<p>出现iotgo定制页面,have a fun !<br><img src="https://i.imgur.com/6nlbqA5.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 物联网，Iotgo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第二话 你跟着我]]></title>
      <url>/2017/10/15/2017-10-15-13-12%E8%80%B3%E8%AF%AD%E3%80%81%E4%B8%80%E4%B8%96%E5%8A%AB-02/</url>
      <content type="html"><![CDATA[<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="0" height="0" src="//music.163.com/outchain/player?type=2&id=29572804&auto=1&height=66"></iframe><br><strong>她的微笑</strong>很温暖，像一片彩虹，在他的心里慢慢升起，从左心房到右心房，他听到了自己的心跳声，咚咚。她的微笑很纯净，就像一泓清水从山涧里流淌出来，那种纯净永远也汇不进江河里，要用手鞠起来，捧在手心，搁在最明亮的眼睛里。那一刻，陈家晖的世界里时间仿佛停止了。他觉得心内的孤独少了几分。</p>
<p>他很想走过去，去跟那个女孩打一声招呼，那怕只说一句你好啊。可是他发现自己根本迈不开脚步。他感觉自己的手脚都被缚住了，一动也动不了。他只是看着那个女孩，看着她的笑容慢慢长大，慢慢凋落，慢慢消失，最后只剩下一张淡漠的脸。<br> <a id="more"></a><br>女孩的眼中闪过一丝轻蔑的神色，喝了一口咖啡，别过头，看向窗外。</p>
<p>窗外的阳光横斜着，照见两个人影，一对十指紧扣的情侣的影子，在水泥路上慢慢拉长，那一对紧握的双手影很久才没了形状。</p>
<p>女孩抿了一口咖啡，站起身来，像陈家晖走过来，眼神飘忽不定。</p>
<p>“你好，我可以在这里坐下来吗？跟你聊聊呢”女孩的声音很小，小到除了陈家晖，整个咖啡厅里的人都听不到。</p>
<p>“额… … 嗯，你好，我叫陈家晖，很高兴… …很高兴认识你。”他有点紧张，觉得心都快要蹦出来了，他有点吃惊，又觉得狂喜。他的心蹦出来了。</p>
<p>“你是不是老早就想跟我讲话了，你干嘛不上来跟我打招呼，要我来跟你打招呼呢，你真是个怪人呢。”女孩调笑着，眼中似乎有晶莹的东西在打转。</p>
<p>有些人你不熟悉，你甚至不认识他，但你见到他，会突然觉得心酸，想要流泪。这是一种记忆，潜藏在心房里，泪腺里，它不在回忆里。你不会明白这种感觉。直到你真切地感受到。</p>
<p>“我… …看到你，觉得特别熟悉，但我好像真的没有见过你。你是一个特别的人。”陈家晖好像在自言自语。</p>
<p>“哈哈，你是一个奇怪的人，我是一个特别的人，我们是这咖啡屋里的两个怪人吗，我叫宁沐，很高兴遇见你，怪人陈。”女孩笑看着陈家晖，她想跟他说，其实，我跟你的感觉一样。</p>
<p>“你好啊，宁沐。咖啡喝得差不多了，我想出去走走，你要你哪儿？”陈家晖觉得有点不自在，说了一句，又觉得说错了。他应该说什么呢，他什么都不用说。</p>
<p>“你跟着我呀！你不是一直跟着我的吗。”思涵挎起包，笑着走出去。笑声很大，回荡在咖啡屋里，屋子里仿佛多了一层春色。</p>
<p>这一次，陈家晖没有迟疑，他起身快步追了上去。</p>
]]></content>
      
        <categories>
            
            <category> 文章 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 耳语、一世劫 </tag>
            
            <tag> 小说 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[树莓派系统安装与启动]]></title>
      <url>/2017/10/15/2017-10-15-12-00%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<h1 id="玩转树莓派"><a href="#玩转树莓派" class="headerlink" title="玩转树莓派"></a>玩转树莓派</h1><h2 id="树莓派系统安装与启动"><a href="#树莓派系统安装与启动" class="headerlink" title="树莓派系统安装与启动"></a>树莓派系统安装与启动</h2><p>树莓派没有板载flash、MMC和硬盘等存储设备，只支持SD卡启动<br>以下操作均在windows7 32位操作系统上进行</p>
<h3 id="1、安装准备工作"><a href="#1、安装准备工作" class="headerlink" title="1、安装准备工作"></a>1、安装准备工作</h3> <a id="more"></a> 
<ul>
<li>16G sanDisk Class4 SD卡  </li>
</ul>
<p>一张2G以上的SD卡及读卡器，最好是高速卡，推荐Class4以上的卡，卡的速度直接影响树莓派的运行速度，建议最好4G以上，否则后续开发会使用经常不够用   </p>
<ul>
<li>win7下安装镜像的工具：  <a href="https://sourceforge.net/projects/win32diskimager/" target="_blank" rel="external">Win32DiskImager</a>  </li>
</ul>
<ul>
<li>安装镜像下载：<a href="http://vx2-downloads.raspberrypi.org/raspbian/images/raspbian-2017-09-08/2017-09-07-raspbian-stretch.zip/" target="_blank" rel="external">raspberian</a>  </li>
</ul>
<h3 id="2、安装步骤"><a href="#2、安装步骤" class="headerlink" title="2、安装步骤"></a>2、安装步骤</h3><ul>
<li>解压下载的系统压缩文件，得到img镜像文件<br>我解压出的image镜像名为：2017-09-07-raspbian-stretch.img    </li>
<li>将SD装进读卡器，插入电脑的USB口中</li>
<li>打开win32diskimager，选择SD卡设备和image镜像，写入<br><img src="https://i.imgur.com/59COgTE.png" alt=""></li>
</ul>
<hr>
<p><strong>Tips：</strong>  </p>
<pre><code>写入需要等待一段时间，安装结束后会弹出完成对话框，说明安装就完成了，如果不成功，请关闭防火墙一类的软件，重新插入SD进行安装  
请注意安装完，win系统下看到SD只有74MB了，这是正常现象，因为linux下的分区win下是看不到的！
</code></pre><hr>
<h3 id="3、树莓派启动"><a href="#3、树莓派启动" class="headerlink" title="3、树莓派启动"></a>3、树莓派启动</h3><h4 id="树莓派供电"><a href="#树莓派供电" class="headerlink" title="树莓派供电"></a>树莓派供电</h4><p>树莓派开发板有两种供电方式：  </p>
<ul>
<li>micro usb供电<br>所有android手机的充电线都可以给他供电    </li>
<li>外接电源<br>B型（B+型）GPIO 左上角的2、4管角为电源正极，6管角为地<br><img src="https://i.imgur.com/kAtXIIm.png" alt="">    <h4 id="访问树莓派"><a href="#访问树莓派" class="headerlink" title="访问树莓派"></a>访问树莓派</h4></li>
<li>外接HDMI或者AV显示器，USB鼠标、键盘<br>把树莓派当作一个小电脑，可以用外接键盘、鼠标操作树莓派，树莓派启动界面会显示在HDMI或者AV显示器上    </li>
<li>使用USB转ttl 串口线通过串口访问树莓派  </li>
<li>通过USB转TTL转接线，将树莓派的串口连接到电脑上，通过串口工具访问<br>推荐使用<a href="https://mobaxterm.mobatek.net/" target="_blank" rel="external">MobaXterm</a>这款开源集成工具，非常好用！<br>树莓派串口连接口请见下图中所示<br><img src="https://i.imgur.com/KY8zajL.png" alt="">  </li>
<li>通过网络访问<br>如果没有显示器等设备，可以通过网络方式访问树莓派，通过SSH、VNC和远程桌面来连接，不仅方便、经济，还有利于后续开发 </li>
</ul>
<hr>
<p><strong>Tips</strong>  </p>
<pre><code>树莓派默认不开启SSH，可在SD卡的根目录下创建一个名为ssh的空文件，这样开机便启动ssh服务了，树莓派的ip可通过路由器查看
windows下是无法访问linux分区的，这时候你需要一台linux主机，或者用虚拟机吧！  
</code></pre><blockquote>
<ul>
<li>SSH<br>  由于树莓派只有一个串口，当我们开发中需要占用这个串口或者我们希望进行远程开发（通过一个根网线或无线连接到树莓派），可以借助Linux系统特有的一种服务SSH来完成  </li>
<li>VNC<br>  VNC是linux下面常用的远程桌面，用它可以在windows或者unix主机上方便的通过网络操作远程主机而不需要一个额外的显示器，非常实用  </li>
<li>远程桌面<br>  远程桌面是windows自带的一个远程桌面登陆系统，很好用</li>
</ul>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 玩转树莓派 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[树莓派简介]]></title>
      <url>/2017/10/14/2017-10-14-14-40%E6%A0%91%E8%8E%93%E6%B4%BE%E7%AE%80%E4%BB%8B/</url>
      <content type="html"><![CDATA[<h1 id="玩转树莓派"><a href="#玩转树莓派" class="headerlink" title="玩转树莓派"></a>玩转树莓派</h1><h2 id="树莓派简介"><a href="#树莓派简介" class="headerlink" title="树莓派简介"></a>树莓派简介</h2><h3 id="1、树莓派是什么"><a href="#1、树莓派是什么" class="headerlink" title="1、树莓派是什么"></a>1、树莓派是什么</h3><p>Raspberry Pi(中文名为“树莓派”,简写为RPi，或者RasPi/RPi)是为学生计算机编程教育而设计，只有信用卡 大小的卡片式电脑，其系统基于Linux。<br>树莓派由注册于英国的慈善组织“Raspberry Pi 基金会”开发，Eben·Upton/埃·厄普顿为项目带头人。2012年3月，英国剑桥大学埃本·阿普顿（Eben Epton）正式发售世界上最小的台式机，又称卡片式电脑，外形只有信用卡大小，却具有电脑的所有基本功能，这就是Raspberry Pi电脑板，中文译名”树莓派”！这一基金会以提升学校计算机科学及相关学科的教育，让计算机变得有趣为宗旨。基金会期望这 一款电脑无论是在发展中国家还是在发达国家，会有更多的其它应用不断被开发出来，并应用到更多领域。<br> <a id="more"></a>  </p>
<pre><code>一句话：树莓派是一个卡片大小的开发板，上面可以运行Linux系统，我们可以用它开发我想要的设备。  
</code></pre><p>以下是树莓派2B的实物图<br><img src="https://i.imgur.com/Qe4uDAe.png" alt=""></p>
<h3 id="2、树莓派的种类"><a href="#2、树莓派的种类" class="headerlink" title="2、树莓派的种类"></a>2、树莓派的种类</h3><p>A型：1个USB、无有线网络接口、功率2.5W,500mA、256MB RAM（基本已经见不到了）<br>B型：2个USB、支持有线网络、功率3.5W，700mA、512MB RAM、26个GPIO(市售还有很多)。<br>B+型：4个USB口、支持有线网络，功耗1W，512M RAM 40个GPIO（2014新出的，推荐使用）<br>购买请在淘宝上搜一下，非常多：200到–300元之间（裸板，不含SD卡、电源）<br><img src="https://i.imgur.com/bB5P7Jv.png" alt="raspberry1"></p>
<h3 id="3、树莓派参数"><a href="#3、树莓派参数" class="headerlink" title="3、树莓派参数"></a>3、树莓派参数</h3><p>B型：<br>处理器<br>BroadcomBCM2835（CPU，GPU，DSP和SDRAM，USB）<br>CPU<br>ARM1176JZF-S核心（ARM11系列）700MHz<br>GPU<br>Broadcom VideoCrore IV，OpenGL ES 2.0,1080p 30 h.264/MPEG-4 AVC高清解码器<br>内存<br>512MByte<br>USB 2.0<br>2（支持USB hub扩展）<br>影像输出<br>Composite RCA（PAL &amp; NTSC），HDMI（rev 1.3 &amp; 1.4），raw LCD Panels via DSI 14 HDMI resolution from 640x350 to 1920x1200 plus various PAL andNTSC standards<br>音源输出<br>3.5mm插孔，HDMI<br>板载存储<br>SD/MMC/SDIO卡插槽<br>网络接口<br>10/100以太网接口<br>外设<br>8xGPIO、UART、I2C、带两个选择的SPI总线，+3.3V，+5V，ground（负极）<br>额定功率<br>700mA（3.5W）<br>电源输入<br>5V / 通过MicroUSB或GPIO头<br>总体尺寸<br>85.60 x 53.98 mm（3.370 x 2.125 in）<br>操作系统<br>Debian GNU/linux，Fedora，Arch Linux ARM，RISC OS, XBMC</p>
<p>B+改进<br>• 更多的GPIO：B+将通用输入输出引脚增加到了40个，而Model B则只有26个；<br>• 更多的USB：B+提供了4个USB端口，对热插拔有着更好的兼容性(Model B只有2个)；<br>• 支持microSD：旧款的SD卡插槽，已经被换成了更漂亮的推入式microSD卡槽；<br>• 更低的功耗：将线性式稳压器换成了开关式，功耗降低了0.5W到1W；<br>• 更好的音频：音频电路部分采用了专用的低噪供电；<br>• 简洁的外形：USB接口被推到了主板的一边，复合视频移到了3.5mm音频口的位置，此外还增加了4个独立的安装孔。  </p>
<h3 id="4、树莓派分布图"><a href="#4、树莓派分布图" class="headerlink" title="4、树莓派分布图"></a>4、树莓派分布图</h3><p>B型，B+类似，请自行对比参考<br><img src="https://i.imgur.com/073ZyQ6.png" alt="raspberry2">  </p>
<h3 id="5、支持的操作系统"><a href="#5、支持的操作系统" class="headerlink" title="5、支持的操作系统"></a>5、支持的操作系统</h3><p> 树莓派支持多种操作系统，如官方操作系统为raspberryPi,ubuntu，Window10 IOT和google定制android等<br><img src="https://i.imgur.com/TtiGDU8.png" alt="">  </p>
<h3 id="6、各代产品的对比"><a href="#6、各代产品的对比" class="headerlink" title="6、各代产品的对比"></a>6、各代产品的对比</h3><p><img src="https://i.imgur.com/ozJRpEz.png" alt="">  </p>
<h3 id="7、树莓派的用途"><a href="#7、树莓派的用途" class="headerlink" title="7、树莓派的用途"></a>7、树莓派的用途</h3><p>• 树莓派编程<br><img src="https://i.imgur.com/gDrSD0z.png" alt=""><br>• 树莓派外接传感器<br><img src="https://i.imgur.com/pizReHj.png" alt=""><br>• 树莓派网络监控<br><img src="https://i.imgur.com/1ZjQQex.png" alt=""><br>• 树莓派网络小车<br><img src="https://i.imgur.com/FYCGO05.png" alt=""><br>• 树莓派科学上网<br><img src="https://i.imgur.com/IGFX5Sm.png" alt=""><br>• 树莓派网络电视盒子<br><img src="https://i.imgur.com/QGHaeCP.png" alt=""><br>• 树莓派路由器<br><img src="https://i.imgur.com/1ersydG.png" alt="">  </p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 玩转树莓派 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/10/12/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Test eaasy]]></title>
      <url>/2017/10/12/test/</url>
      <content type="html"><![CDATA[<p>just for test essay !!!</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[第一话 匆匆一眼]]></title>
      <url>/2017/10/11/2017-10-11-18-46%E8%80%B3%E8%AF%AD%E3%80%81%E4%B8%80%E4%B8%96%E5%8A%AB-01/</url>
      <content type="html"><![CDATA[<p><strong>四月</strong>多雨的季节，好不容易迎来一次碧空如洗的晴天，仿佛睡着的城市一下子醒了过来。陈家晖也好不容易忙完了手头的工作，呆呆地站在十一楼的窗前，他心里空落落的。点了一根烟，吸了一口，觉得有点头晕，就扔了。</p>
<p>那一刻，他想要跳下去。有时候他真觉得自己会从那里跳下去。他很孤独，在喧闹的人群里，他的微笑让所有人都觉得他是个很温和很开心的人。只有他自己知道，他孤独得快要死掉。<br> <a id="more"></a><br>孤独要藏住，仿佛是一件很丢脸的事。可是，谁不是孤独的呢？越是孤独地人越会笑，他怕人看到。<br>他突然想出去走走，喝杯咖啡，去看看路上的人群，去看那些迟春的花朵。</p>
<p>他很少出门，每次出门都会穿得整整齐齐的，用妮维维洁一次面，再用碧欧泉控油，用Sukin洗发水认真地洗一次头，喷上KENZO香水，打扮得很漂亮。他工作的时候很随意，随意的穿着，随意地写代码，随意地例行公事，随意的应付别人，一切都理所当然。但是今天不一样，他觉得很重要，所以要穿得好看点。</p>
<p>人的外貌不是重要的，但是面貌很重要。外貌可以张扬，可以温煦，可以冷峻，可以帅气，甚至可以猥琐，但是面貌一定要健康。对，这很重要，他很健康。</p>
<p>他走过汹涌的人群，看到一个背影，头发束起来，穿着蓝色连衣裙，肩上背着黄色的Cambridge Satchel的包包。他觉得那个女孩很熟悉，仿佛在哪里见过，他没有走上去，只是跟着那个女孩。</p>
<p>他一直走在女孩后面，差不多3米的距离，刻意保持着和女孩同样的脚步频率。在人少的地方，女孩似乎觉得有人在跟着她，回过了头，眼睛刚好落在陈家晖的身上。女孩停顿了3秒针，眼中掠过一阵不知名的神色，然后别过头，继续往前走。</p>
<p>陈家晖没有再跟，他停下来，在路边的休息椅上坐了下来。他点了一根烟，抽了一口，觉得头晕，扔掉了。他的脑海里突然浮现那个女孩的脸，他觉得有点窒息。他起身跑起来，要去追上那个女孩，他要追上去跟那个女孩说，嗨，你好，我叫陈家晖，我想认识你。<br>前面只有汹涌的人群，你追不上任何人。他觉得有点失落。他恨自己。</p>
<p>走在星巴克的门口，他停了下来，看了看手表，下午四点半，应该去喝杯咖啡。他去咖啡厅只会喝espresso，要double espreso，配一杯温水。第一份espreso他要一口闷掉，他贪恋这种味道，像毒药，仿佛喝下去就会死掉，可他每次都活着，他觉得很开心。然后他会喝几口温水，再慢慢地品尝第二份咖啡，那种苦感，与他的孤独同味。</p>
<p>他一口喝掉那份espresso，抬起头，看到那个穿着蓝色连衣裙的姑娘。</p>
<p>她在对他笑。</p>
]]></content>
      
        <categories>
            
            <category> 文章 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 耳语、一世劫 </tag>
            
            <tag> 小说 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
